import 'package:iconfont/src/iconfont_data.dart';
import 'package:iconfont/src/utils.dart';

/// IconTemp
class IconTemp {
  /// build
  static String build(String className, IconFontData data) {
    var itemContent = data.glyphs!
        .map((e) =>
            _buildItem(data.cssPrefixText ?? "", e, data.fontPackage ?? ""))
        .join("\n");

    var fontPackageContent = (data.fontPackage ?? "").isNotEmpty
        ? "\n  static const String _package = '${data.fontPackage}';"
        : "";

    if (iconFontConfig.fontPackage.isNotEmpty) {
      fontPackageContent =
          "\n  static const String _package = '${iconFontConfig.fontPackage}';";
    }

    String contents = '''
//  This file is automatically generated. DO NOT EDIT, all your changes would be lost.
//  https://pub.dartlang.org/packages/iconfont

import 'package:flutter/material.dart' show IconData;

class $className {
  static const String _family = '${data.fontFamily}';$fontPackageContent
  
  $className._();
  
$itemContent
}
''';

    return contents;
  }

  /// _buildItem
  static String _buildItem(
      String preText, IconFontGlyph glyphs, String fontPackage) {
    String iconName =
        Utils.formatName("${preText}${glyphs.fontClass}").toLowerCase();
    String unicode = glyphs.unicode ?? "";
    String glyphsName = "";
    String packageName = "";
    if (showRemark && glyphs.name != null && glyphs.name != "") {
      glyphsName = "/// ${glyphs.name}";
    }

    if (iconFontConfig.fontPackage.isNotEmpty) {
      packageName = ", fontPackage: _package";
    }
    return '''  $glyphsName
  static const IconData $iconName = IconData(0x$unicode, fontFamily: _family$packageName);''';
  }
}
